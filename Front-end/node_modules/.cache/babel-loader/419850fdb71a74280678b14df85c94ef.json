{"ast":null,"code":"import _defineProperty from \"/Users/lior-atiya/Desktop/Programming/Facework/frond-end/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/lior-atiya/Desktop/Programming/Facework/frond-end/src/context.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport items from \"./data\";\nconst BusinessContext = React.createContext();\nexport default class BusinessProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      business: [],\n      sortedBusiness: [],\n      featuredBusiness: [],\n      loading: true,\n      type: \"all\",\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false,\n      pets: false\n    };\n\n    this.getBusiness = slug => {\n      let tempBusiness = [...this.state.business];\n      const business = tempBusiness.find(busi => busi.slug === slug);\n      return business;\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterBusiness);\n    };\n\n    this.filterBusiness = () => {\n      let _this$state = this.state,\n          business = _this$state.business,\n          type = _this$state.type,\n          capacity = _this$state.capacity,\n          price = _this$state.price,\n          minPrice = _this$state.minPrice,\n          maxPrice = _this$state.maxPrice,\n          minSize = _this$state.minSize,\n          maxSize = _this$state.maxSize,\n          breakfast = _this$state.breakfast,\n          pets = _this$state.pets; //all the business\n\n      let tempBusiness = [...business]; //transform value\n\n      capacity = parseInt(capacity); //filter by type\n\n      if (type !== 'all') {\n        tempBusiness = tempBusiness.filter(busi => busi.type === type);\n      } //filter by capacity\n\n\n      if (capacity !== 1) {\n        tempBusiness = tempBusiness.filter(busi => busi.capacity >= capacity);\n      } //filter by price\n\n\n      tempBusiness = tempBusiness.filter(busi => busi.price <= price); //filter by breakfast\n\n      if (breakfast) {\n        tempBusiness = tempBusiness.filter(busi => busi.breakfast === true);\n      } //filter by pets\n\n\n      if (pets) {\n        tempBusiness = tempBusiness.filter(busi => busi.pets === true);\n      }\n\n      this.setState({\n        sortedBusiness: tempBusiness\n      });\n    };\n  }\n\n  //getData\n  componentDidMount() {\n    let business = this.formatData(items);\n    let featuredBusiness = business.filter(busi => busi.featured === true);\n    let maxPrice = Math.max(...business.map(item => item.price));\n    let maxSize = Math.max(...business.map(item => item.size));\n    this.setState({\n      business,\n      featuredBusiness,\n      sortedBusiness: business,\n      loading: false,\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n\n      let business = _objectSpread({}, item.fields, {\n        images,\n        id\n      });\n\n      return business;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return (//...this.state = pass whole state\n      React.createElement(BusinessContext.Provider, {\n        value: _objectSpread({}, this.state, {\n          getBusiness: this.getBusiness,\n          handleChange: this.handleChange\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, this.props.children)\n    );\n  }\n\n}\nconst BusinessConsumer = BusinessContext.Consumer;\nexport function withBusinessConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return React.createElement(BusinessConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, value => React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })));\n  };\n}\nexport { BusinessProvider, BusinessConsumer, BusinessContext };","map":{"version":3,"sources":["/Users/lior-atiya/Desktop/Programming/Facework/frond-end/src/context.js"],"names":["React","Component","items","BusinessContext","createContext","BusinessProvider","state","business","sortedBusiness","featuredBusiness","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","pets","getBusiness","slug","tempBusiness","find","busi","handleChange","event","target","value","checked","name","setState","filterBusiness","parseInt","filter","componentDidMount","formatData","featured","Math","max","map","item","size","tempItems","id","sys","images","fields","image","file","url","render","props","children","BusinessConsumer","Consumer","withBusinessConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport items from \"./data\"\n\nconst BusinessContext = React.createContext();\n\nexport default class BusinessProvider extends Component {\n    state = {\n        business: [],\n        sortedBusiness: [],\n        featuredBusiness: [],\n        loading: true,\n        type: \"all\",\n        capacity: 1,\n        price: 0,\n        minPrice: 0,\n        maxPrice: 0,\n        minSize: 0,\n        maxSize: 0,\n        breakfast: false,\n        pets: false,\n    };\n\n    //getData\n    componentDidMount() {\n        let business = this.formatData(items);\n        let featuredBusiness = business.filter(busi => busi.featured === true);\n        let maxPrice = Math.max(...business.map(item => item.price))\n        let maxSize = Math.max(...business.map(item => item.size))\n\n        this.setState({ \n            business, \n            featuredBusiness, \n            sortedBusiness: business, \n            loading: false,\n            price: maxPrice,\n            maxPrice,\n            maxSize \n        })\n    }\n\n    formatData(items) {\n        let tempItems = items.map(item => {\n            let id = item.sys.id;\n            let images = item.fields.images.map(image =>\n                image.fields.file.url);\n\n            let business = { ...item.fields, images, id }\n            return business;\n        })\n        return tempItems;\n    }\n\n    getBusiness = (slug) => {\n        let tempBusiness = [...this.state.business]; \n        const business = tempBusiness.find(busi => busi.slug === slug);\n        return business;\n    }\n\n    handleChange = event => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? \n        target.checked : target.value;\n        const name = event.target.name;\n        this.setState(\n            {\n                [name]: value\n            },\n            this.filterBusiness\n        );  \n    }\n\n    filterBusiness = () => {\n        let {\n            business,\n            type,\n            capacity,\n            price,\n            minPrice,\n            maxPrice,\n            minSize,\n            maxSize,\n            breakfast,\n            pets,\n        } = this.state\n\n        //all the business\n        let tempBusiness = [...business];\n\n        //transform value\n        capacity = parseInt(capacity)\n\n        \n        //filter by type\n        if(type !== 'all'){\n            tempBusiness = tempBusiness.filter(busi => busi.type === type);\n        }\n\n        //filter by capacity\n        if(capacity !== 1){\n            tempBusiness = tempBusiness.filter(busi => busi.capacity >= capacity);\n        }\n\n        //filter by price\n        tempBusiness = tempBusiness.filter(busi => busi.price <= price);\n\n        //filter by breakfast\n        if(breakfast) {\n            tempBusiness = tempBusiness.filter(busi => busi.breakfast === true);\n        }\n\n        //filter by pets\n        if(pets){\n            tempBusiness = tempBusiness.filter(busi => busi.pets === true);\n        }\n\n        this.setState({\n            sortedBusiness: tempBusiness\n        })\n    }\n\n    render() {\n        return (\n            //...this.state = pass whole state\n            <BusinessContext.Provider \n            value={{ \n                ...this.state, \n                getBusiness: this.getBusiness,\n                handleChange: this.handleChange,\n                 }}>\n                {this.props.children}\n            </BusinessContext.Provider>\n        )\n    }\n}\n\nconst BusinessConsumer = BusinessContext.Consumer;\n\nexport function withBusinessConsumer(Component){\n    return function ConsumerWrapper(props){\n        return <BusinessConsumer>\n            {value => <Component {...props} context={value} />}\n        </BusinessConsumer>\n    }\n}\nexport { BusinessProvider, BusinessConsumer, BusinessContext };\n"]},"metadata":{},"sourceType":"module"}